{
  "openapi": "3.0.1",
  "info": {
    "title": "BaSyx Submodel HTTP REST-API",
    "description": "The full description of the generic BaSyx Submodel HTTP REST-API",
    "contact": {
      "name": "Constantin Ziesche",
      "url": "https://www.bosch.com/de/",
      "email": "constantin.ziesche@bosch.com"
    },
    "license": {
      "name": "EPL-2.0",
      "url": "https://www.eclipse.org/legal/epl-2.0/"
    },
    "version": "v1"
  },
  "paths": {
    "/submodel/table": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves a customizable table version of a Submodel",
        "operationId": "GetSubmodelAsTable",
        "parameters": [
          {
            "name": "columns",
            "in": "query",
            "description": "A comma-separated list of field names to structure the payload beeing returned",
            "schema": {
              "type": "string",
              "description": "A comma-separated list of field names to structure the payload beeing returned",
              "nullable": true
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Submodel not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/submodel/values": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves the minimized version of a Submodel, i.e. only the values of SubmodelElements are serialized and returned",
        "operationId": "GetSubmodelValues",
        "responses": {
          "404": {
            "description": "Submodel not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/submodel": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves the entire Submodel",
        "operationId": "GetSubmodel",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submodel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submodel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submodel"
                }
              }
            }
          },
          "404": {
            "description": "Submodel not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submodel/submodelElements": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves all SubmodelElements from the current Submodel",
        "operationId": "GetSubmodelElements",
        "responses": {
          "200": {
            "description": "Returns a list of found SubmodelElements",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmodelElement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmodelElement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmodelElement"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Submodel not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Adds a new Submodel-Element to the Submodel",
        "operationId": "PutSubmodelElement",
        "requestBody": {
          "description": "The Submodel-Element object",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ISubmodelElement"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISubmodelElement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ISubmodelElement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ISubmodelElement"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Submodel Element created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Submodel not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submodel/submodelElements/{submodelElementIdShort}": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves a specific Submodel-Element from the Submodel",
        "operationId": "GetSubmodelElementByIdShort",
        "parameters": [
          {
            "name": "submodelElementIdShort",
            "in": "path",
            "description": "The Submodel-Element's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Submodel-Element's short id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested Submodel-Element",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmodelElement"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Submodel Element not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Updates the Asset Administration Shell's Submodel's Submodel-Element",
        "operationId": "PutSubmodelElementValueByIdShort",
        "parameters": [
          {
            "name": "submodelElementIdShort",
            "in": "path",
            "description": "The Submodel-Element's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Submodel-Element's short id",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The new value",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ElementValue"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementValue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElementValue"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElementValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submodel-Element's value changed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ElementValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElementValue"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Submodel-Element not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      },
      "delete": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Deletes a specific Submodel-Element from the Submodel",
        "operationId": "DeleteSubmodelElementByIdShort",
        "parameters": [
          {
            "name": "submodelElementIdShort",
            "in": "path",
            "description": "The Submodel-Element's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Submodel-Element's short id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "204": {
            "description": "Submodel-Element deleted successfully"
          },
          "404": {
            "description": "Submodel / Submodel-Element not found"
          }
        }
      }
    },
    "/submodel/submodelElements/{submodelElementIdShort}/value": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves the value of a specific Submodel-Element from the Submodel",
        "operationId": "GetSubmodelElementValueByIdShort",
        "parameters": [
          {
            "name": "submodelElementIdShort",
            "in": "path",
            "description": "The Submodel-Element's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Submodel-Element's short id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the value of a specific Submodel-Element",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Submodel-Element not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submodel/operations/{operationIdShort}": {
      "post": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Synchronously invokes a specific operation from the Submodel",
        "operationId": "InvokeOperationByIdShort",
        "parameters": [
          {
            "name": "operationIdShort",
            "in": "path",
            "description": "The Operation's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Operation's short id",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The parameterized request object for the invocation",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation invoked successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Operation not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submodel/operations/{operationIdShort}/async": {
      "post": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Asynchronously invokes a specific operation from the Submodel",
        "operationId": "InvokeOperationByIdShortAsync",
        "parameters": [
          {
            "name": "operationIdShort",
            "in": "path",
            "description": "The Operation's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Operation's short id",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The parameterized request object for the invocation",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation invoked successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallbackResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallbackResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallbackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Method handler not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submodel/operations/{operationIdShort}/invocationList/{requestId}": {
      "get": {
        "tags": [
          "SubmodelServices"
        ],
        "summary": "Retrieves the result of an asynchronously started operation",
        "operationId": "GetInvocationResultByIdShort",
        "parameters": [
          {
            "name": "operationIdShort",
            "in": "path",
            "description": "The Operation's short id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Operation's short id",
              "nullable": true
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The request id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The request id",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvocationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "404": {
            "description": "Submodel / Operation / Request not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "KeyType": {
        "enum": [
          "Undefined",
          "Custom",
          "IRI",
          "URI",
          "IRDI",
          "IdShort",
          "FragmentId"
        ],
        "type": "string"
      },
      "Identifier": {
        "required": [
          "id",
          "idType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/KeyType"
          }
        }
      },
      "AdministrativeInformation": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LangString": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IEndpointSecurity": {
        "type": "object"
      },
      "IEndpoint": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "security": {
            "$ref": "#/components/schemas/IEndpointSecurity"
          }
        }
      },
      "ModelType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetKind": {
        "enum": [
          "Type",
          "Instance"
        ],
        "type": "string"
      },
      "KeyElements": {
        "enum": [
          "Undefined",
          "GlobalReference",
          "FragmentReference",
          "AccessPermissionRule",
          "AnnotatedRelationshipElement",
          "BasicEvent",
          "Blob",
          "Capability",
          "ConceptDictionary",
          "DataElement",
          "File",
          "Entity",
          "Event",
          "MultiLanguageProperty",
          "Operation",
          "Property",
          "Range",
          "ReferenceElement",
          "RelationshipElement",
          "SubmodelElement",
          "SubmodelElementCollection",
          "View",
          "Asset",
          "AssetAdministrationShell",
          "ConceptDescription",
          "Submodel"
        ],
        "type": "string"
      },
      "Key": {
        "required": [
          "idType",
          "local",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/KeyElements"
          },
          "idType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "value": {
            "type": "string"
          },
          "local": {
            "type": "boolean"
          }
        }
      },
      "SubmodelReference": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            },
            "nullable": true
          }
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            },
            "nullable": true
          }
        }
      },
      "IDataSpecificationContent": {
        "type": "object"
      },
      "IEmbeddedDataSpecification": {
        "type": "object",
        "properties": {
          "hasDataSpecification": {
            "$ref": "#/components/schemas/Reference"
          },
          "dataSpecificationContent": {
            "$ref": "#/components/schemas/IDataSpecificationContent"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "$ref": "#/components/schemas/Identifier"
          },
          "kind": {
            "$ref": "#/components/schemas/AssetKind"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "assetIdentificationModel": {
            "$ref": "#/components/schemas/SubmodelReference"
          },
          "billOfMaterial": {
            "$ref": "#/components/schemas/SubmodelReference"
          },
          "administration": {
            "$ref": "#/components/schemas/AdministrativeInformation"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmbeddedDataSpecification"
            },
            "nullable": true,
            "readOnly": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        }
      },
      "SubmodelDescriptor": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "$ref": "#/components/schemas/Identifier"
          },
          "administration": {
            "$ref": "#/components/schemas/AdministrativeInformation"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEndpoint"
            },
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        }
      },
      "AssetAdministrationShellDescriptor": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "$ref": "#/components/schemas/Identifier"
          },
          "administration": {
            "$ref": "#/components/schemas/AdministrativeInformation"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEndpoint"
            },
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "submodels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmodelDescriptor"
            },
            "nullable": true
          }
        }
      },
      "MessageType": {
        "enum": [
          "Unspecified",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Fatal",
          "Exception"
        ],
        "type": "string"
      },
      "Message": {
        "type": "object",
        "properties": {
          "messageType": {
            "$ref": "#/components/schemas/MessageType"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "isException": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "entity": {
            "type": "object",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          }
        }
      },
      "ModelingKind": {
        "enum": [
          "Instance",
          "Template"
        ],
        "type": "string"
      },
      "IConstraint": {
        "type": "object",
        "properties": {
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        }
      },
      "ISubmodelElement": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IConstraint"
            },
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true,
            "readOnly": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "kind": {
            "$ref": "#/components/schemas/ModelingKind"
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmbeddedDataSpecification"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "Submodel": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "$ref": "#/components/schemas/Identifier"
          },
          "kind": {
            "$ref": "#/components/schemas/ModelingKind"
          },
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "submodelElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISubmodelElement"
            },
            "nullable": true
          },
          "administration": {
            "$ref": "#/components/schemas/AdministrativeInformation"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmbeddedDataSpecification"
            },
            "nullable": true
          },
          "qualifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IConstraint"
            },
            "nullable": true
          }
        }
      },
      "AssetAdministrationShellReference": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            },
            "nullable": true
          }
        }
      },
      "View": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "containedElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            },
            "nullable": true
          },
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        }
      },
      "ConceptDescriptionReference": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            },
            "nullable": true
          }
        }
      },
      "ConceptDictionary": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "conceptDescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConceptDescriptionReference"
            },
            "nullable": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          }
        }
      },
      "AssetAdministrationShell": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "$ref": "#/components/schemas/Identifier"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "submodels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submodel"
            },
            "nullable": true
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "derivedFrom": {
            "$ref": "#/components/schemas/AssetAdministrationShellReference"
          },
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "nullable": true
          },
          "administration": {
            "$ref": "#/components/schemas/AdministrativeInformation"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmbeddedDataSpecification"
            },
            "nullable": true,
            "readOnly": true
          },
          "conceptDictionaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConceptDictionary"
            },
            "nullable": true
          }
        }
      },
      "SubmodelElement": {
        "type": "object",
        "properties": {
          "idShort": {
            "type": "string",
            "nullable": true
          },
          "semanticId": {
            "$ref": "#/components/schemas/Reference"
          },
          "qualifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IConstraint"
            },
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LangString"
            },
            "nullable": true
          },
          "kind": {
            "$ref": "#/components/schemas/ModelingKind"
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "embeddedDataSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmbeddedDataSpecification"
            },
            "nullable": true
          }
        }
      },
      "OperationVariable": {
        "type": "object",
        "properties": {
          "modelType": {
            "$ref": "#/components/schemas/ModelType"
          },
          "value": {
            "$ref": "#/components/schemas/ISubmodelElement"
          }
        }
      },
      "InvocationRequest": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "inputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            },
            "nullable": true
          },
          "timeout": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "OperationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "isException": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "entity": {
            "type": "object",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          }
        }
      },
      "ExecutionState": {
        "enum": [
          "Initiated",
          "Running",
          "Completed",
          "Canceled",
          "Failed"
        ],
        "type": "string"
      },
      "InvocationResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "outputArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationVariable"
            },
            "nullable": true
          },
          "operationResult": {
            "$ref": "#/components/schemas/OperationResult"
          },
          "executionState": {
            "$ref": "#/components/schemas/ExecutionState"
          }
        }
      },
      "ElementValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "CallbackResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      }
    }
  }
}